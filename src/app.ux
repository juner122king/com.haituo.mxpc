<script>

import sensors from 'pdt-mini-ui/utils/quickapp-track.js'

module.exports = {
  onCreate() {

    console.info('Application onCreate');
    sensors.init(this);
    sensors.appLaunch()
    this.$sensors = sensors;


    const $utils = require('./helper/utils').default
    const $apis = require('./helper/apis').default
    const $router = require('@system.router')
    const $storage = require("@system.storage")
    const $prompt = require("@system.prompt")
    const $ad = require('@service.ad')
    const $device = require('@system.device')
    const $geolocation = require('@system.geolocation')
    const $shortcut = require('@system.shortcut')
    const $processData = require('./helper/processData').default
    const $config = require('./config.js').default
    /* @desc: 注入方法至全局 global,以便页面调用 */
    const hook2global = global.__proto__ || global
    hook2global.$utils = $utils
    hook2global.$apis = $apis
    hook2global.$router = $router
    hook2global.$storage = $storage
    hook2global.$prompt = $prompt
    hook2global.$ad = $ad
    hook2global.$device = $device
    hook2global.$geolocation = $geolocation
    hook2global.$shortcut = $shortcut
    hook2global.$processData = $processData
    hook2global.$config = $config
    this.openScreenAction()
  },
  openScreenAction() {
    console.log('执行openScreenAction');
    const that = this;
    let adBrand = $ad.getProvider().toLowerCase();
    console.log('广告adBrand:', adBrand);

    if (adBrand !== 'oppo') return; // 只处理oppo广告
    let openScrrenId = $config.adCodeData[adBrand].openScreen;
    console.log('开屏广告id:', openScrrenId);

    $ad.onSplashStatus({
      reserved: true,
      callback: (data) => {
        console.log(`监听开屏广告状态成功!data${JSON.stringify(data)}`);
        let onSplashStatusData = data;
        let splashData = {
          ...that._def.dataApp.actiParam,
          openScreenStatusCode: onSplashStatusData.statusCode
        };

        if (onSplashStatusData.statusCode == '-100') {
          console.log('这是-100');
          return;
        }

        // 提取ECPM处理逻辑
        let ecpm = that.getEcpm(onSplashStatusData);

        // 处理竞价参数
        let ecpmParam = {
          ecpm: ecpm,
          adType: 'OPEN_SCREEN',
          adPositionId: openScrrenId,
          clickCount: onSplashStatusData.statusCode == 0 ? '0' : '1'
        };

        // 上传竞价参数
        $utils.conversionUpload(that, ecpmParam, splashData);
        let event = onSplashStatusData.statusCode == 0 ? 'SplashLaunch' : 'Splash'
        // 旧埋点处理
        $utils.buriedPointReport(that, event, openScrrenId, splashData);

        if (onSplashStatusData.statusCode == 0) { //接入新埋点，只需要广告显示就执行
          sensors.pageShow({ channel: splashData.channelValue, formId: openScrrenId })
        }

      }
    })
  },
  // 提取ECPM获取逻辑的函数
  getEcpm(onSplashStatusData) {
    let ecpm = '';
    try {
      ecpm = onSplashStatusData.data.ecpm || onSplashStatusData.data.cpm || this._def.dataApp.openScreenEcpm;
    } catch (error) {
      ecpm = this._def.dataApp.openScreenEcpm || 0;
    }
    return ecpm;
  },
  dataApp: {
    conversionlicks: 0,//点击上传次数为0则不做上传处理
    clicksOnAdsNow: 0,
    transparentLayerHits: 1,
    actiParam: { // 上报参数
      channelValue: "",
      oaid: "",
      type: ""
    },
    isEnabled: false,
    isShwoAd: false,//是否正在奖励广告,
    myOaid: 0,
    requParamHead: { //完成任务请求头加
    },
    openScreenEcpm: 0,
    showTransparencyMask: 1,//当前获取的广告id次数 最大为5
  },
}
</script>
